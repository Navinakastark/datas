# Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('expenditure_data.csv')

# Exploratory data analysis
print(df.head()) # View the first few rows of data
print(df.info()) # Get a summary of the dataset
print(df.describe()) # Get summary statistics of the dataset

# Data visualization
sns.pairplot(df, hue='Category', diag_kind='hist')
plt.show()

# Feature engineering
df['Year'] = pd.to_datetime(df['Date']).dt.year
df['Month'] = pd.to_datetime(df['Date']).dt.month

# Data pre-processing
df = df.drop(['Date'], axis=1) # Drop the date column
df = pd.get_dummies(df, columns=['Category']) # One-hot encoding for categorical variables

# Split data into train and test sets
from sklearn.model_selection import train_test_split
X = df.drop(['Amount'], axis=1)
y = df['Amount']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and train the model
from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Evaluate the model
from sklearn.metrics import mean_squared_error
y_pred = rf.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print('Root Mean Squared Error:', rmse)

# Make predictions
new_data = pd.DataFrame({
    'Year': [2022],
    'Month': [6],
    'Category_Entertainment': [0],
    'Category_Food': [1],
    'Category_Housing': [0],
    'Category_Transportation': [0],
    'Category_Utilities': [0]
})
predicted_amount = rf.predict(new_data)
print('Predicted amount:', predicted_amount)

